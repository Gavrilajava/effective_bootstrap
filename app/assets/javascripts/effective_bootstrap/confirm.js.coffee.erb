# These next three methods hijack rails/ujs and jquery_ujs data-confirm and do it our own way with a double click confirm

if <%= !!EffectiveBootstrap.use_custom_data_confirm %> && (window.Rails || $.rails)
  $(document).on 'confirm', (event) ->
    $obj = $(event.target)

    # Already confirmed
    return true if $obj.data('confirmed')

    # Otherwise unconfirmed
    $obj.data('confirm-original', $obj.html())
    $obj.html($obj.data('confirm'))
    $obj.data('confirmed', true)

    # When using the direct to s3 active storage javascript library
    $activeStorageUpload = $obj.closest('form').find('input[type=file][data-direct-upload-url]')

    if $activeStorageUpload.length == 0
      setTimeout(
        (->
          $obj.data('confirmed', false)
          $obj.html($obj.data('confirm-original'))
        )
        , 4000)

    # Do not display the confirmation dialog
    false

  if window.Rails
    window.Rails.confirm = (message) -> true
    window.Rails.effective_bootstrap_custom_data_confirm = true

  if $.rails
    $.rails.confirm = (message) -> true
    $.rails.effective_bootstrap_custom_data_confirm = true

  $(document).on 'confirm:complete', (event) -> $(event.target).data('confirmed')

  $(document).on 'click', 'a.dropdown-item[data-confirm]', (event) ->
    event.preventDefault()
    false
